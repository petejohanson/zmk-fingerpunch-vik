/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>
 
 #define DEF     0
 #define NAV     1
 #define FUNC    2
 
 / {
 
     keymap {
         compatible = "zmk,keymap";

         default_layer {
            bindings = <
                      &kp K_VOL_UP
            &to NAV   &to DEF   &to FUNC        &kp ESC  &kp FSLH &kp ASTRK &kp BSPC
                      &kp K_VOL_DN              &kp N7   &kp N8   &kp N9    &kp MINUS
                                                &kp N4   &kp N5   &kp N6    &kp PLUS
                      &kp UP                    &kp N1   &kp N2   &kp N3    &kp RET
            &kp LEFT  &kp RET   &kp RIGHT            &kp N0           &kp DOT
                      &kp DOWN
            >;
         };
 
         nav_layer {
            bindings = <
                      &trans
            &trans    &trans   &trans           &kp ESC    &kp C_PREV &kp C_NEXT &kp C_PLAY_PAUSE
                      &trans                    &kp PG_UP  &kp UP     &kp PG_DN  &kp K_VOL_UP
                                                &kp LEFT   &kp N5     &kp RIGHT  &kp K_VOL_DN
                      &trans                    &kp HOME   &kp DOWN   &kp END    &kp RET
            &trans    &trans   &trans                &kp C_REWIND   &kp C_FAST_FORWARD
                      &trans
            >;
         };

         func_layer {
            bindings = <
                      &trans
            &trans    &trans   &trans       &bootloader        &sys_reset         &trans           &trans
                      &trans                &bt BT_CLR         &bt BT_PRV         &bt BT_NXT       &kp BSPC
                                            &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3
                      &trans                &ext_power EP_ON   &ext_power EP_OFF  &out OUT_USB     &out OUT_BLE
            &trans    &trans   &trans                     &trans                         &trans
                      &trans
            >;
         };
     };
 };
 

